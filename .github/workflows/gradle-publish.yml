# SPDX-FileCopyrightText: 2024 Deutsche Telekom AG
#
# SPDX-License-Identifier: Apache-2.0

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  push:
    tags: [ 'releasemain' ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Get Token
      uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: ${{ secrets.LMOS_COMMITER_APPID }}
        private-key: ${{ secrets.LMOS_COMMITER }}

    - name: Checkout main
      uses: actions/checkout@v4
      with:
        ref: 'main'
        fetch-depth: '0'
        token: ${{ steps.app-token.outputs.token }}

    - name: Drop release tag
      run: git push origin :releasemain

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Generate versions
      uses: HardNorth/github-version-generate@v1.4.0
      with:
        version-source: file
        version-file: gradle.properties
        version-file-extraction-pattern: '(?<=version=).+'
        next-version-increment-minor: true

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Git init
      run: git config --global user.email "cicd@ancf.ai" && git config --global user.name "CICD"

    - name: Update version
      run: ./gradlew :release -x build -Prelease.useAutomaticVersion=true -Prelease.releaseVersion=${{ env.RELEASE_VERSION }} -Prelease.newVersion=${{ env.NEXT_VERSION }} --no-parallel
      env:
        GITHUB_USER: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Checkout release tag
      uses: actions/checkout@v4
      with:
        ref: ${{ env.RELEASE_VERSION }}
        fetch-depth: '0'

    - name: Publish release
      run: ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache
      env:
        GITHUB_USER: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALUSERNAME }}
        ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALPASSWORD }}
        ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEY }}
        ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEYPASSWORD }}
